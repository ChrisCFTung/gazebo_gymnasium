<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="third_tb3"  default="tb3_2"/>

  <arg name="first_tb3_x_pos" default="-7.0"/>
  <arg name="first_tb3_y_pos" default="-1.0"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 1.57"/>

  <arg name="second_tb3_x_pos" default=" 7.0"/>
  <arg name="second_tb3_y_pos" default="-1.0"/>
  <arg name="second_tb3_z_pos" default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" 1.57"/>

  <arg name="third_tb3_x_pos" default=" 0.5"/>
  <arg name="third_tb3_y_pos" default=" 3.0"/>
  <arg name="third_tb3_z_pos" default=" 0.0"/>
  <arg name="third_tb3_yaw"   default=" 0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>  

  <!-- Map server -->
  <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/>

  <arg name="move_forward_only" default="false"/>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <group ns = "$(arg first_tb3)">
    <param name="tf_prefix" value="$(arg first_tb3)" />

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param /robot_description" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
      <param name="frame_id" value="map" />
    </node>

    <include file='$(find turtlebot3_navigation)/launch/amcl.launch'>
        <arg name="initial_pose_x" value="$(arg first_tb3_x_pos)"/>
        <arg name="initial_pose_y" value="$(arg first_tb3_y_pos)"/>
        <arg name="initial_pose_a" value="$(arg first_tb3_yaw)"/>
    </include>
    <param name="amcl/odom_frame_id" value="$(arg first_tb3)/odom"/>
    <param name="amcl/base_frame_id" value="$(arg first_tb3)/base_footprint"/>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
      <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
      <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
      <remap from="cmd_vel" to="cmd_vel"/>
      <remap from="odom" to="odom"/>
      <param name="local_costmap/global_frame" value="$(arg first_tb3)/odom"/>
      <param name="local_costmap/robot_base_frame" value="$(arg first_tb3)/base_footprint"/>
      <param name="global_costmap/global_frame" value="map"/>
      <param name="global_costmap/robot_base_frame" value="$(arg first_tb3)/base_footprint"/>
      <param name="local_costmap/scan/sensor_frame" value="$(arg first_tb3)/base_scan"/>
      <param name="local_costmap/scan/topic" value="/$(arg first_tb3)/scan"/>
      <param name="global_costmap/scan/sensor_frame" value="$(arg first_tb3)/base_scan"/>
      <param name="global_costmap/scan/topic" value="/$(arg first_tb3)/scan"/>
      <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>

    </group>

    <group ns = "$(arg second_tb3)">
    <param name="tf_prefix" value="$(arg second_tb3)" />

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param /robot_description" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
      <param name="frame_id" value="map" />
    </node>

    <include file='$(find turtlebot3_navigation)/launch/amcl.launch'>
        <arg name="initial_pose_x" value="$(arg second_tb3_x_pos)"/>
        <arg name="initial_pose_y" value="$(arg second_tb3_y_pos)"/>
        <arg name="initial_pose_a" value="$(arg second_tb3_yaw)"/>
    </include>
    <param name="amcl/odom_frame_id" value="$(arg second_tb3)/odom"/>
    <param name="amcl/base_frame_id" value="$(arg second_tb3)/base_footprint"/>


    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
      <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
      <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
      <remap from="cmd_vel" to="cmd_vel"/>
      <remap from="odom" to="odom"/>
      <param name="local_costmap/global_frame" value="$(arg second_tb3)/odom"/>
      <param name="local_costmap/robot_base_frame" value="$(arg second_tb3)/base_footprint"/>
      <param name="global_costmap/global_frame" value="map"/>
      <param name="global_costmap/robot_base_frame" value="$(arg second_tb3)/base_footprint"/>
      <param name="local_costmap/scan/sensor_frame" value="$(arg second_tb3)/base_scan"/>
      <param name="local_costmap/scan/topic" value="/$(arg second_tb3)/scan"/>
      <param name="global_costmap/scan/sensor_frame" value="$(arg second_tb3)/base_scan"/>
      <param name="global_costmap/scan/topic" value="/$(arg second_tb3)/scan"/>
      <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>

    </group>

    <node pkg="rviz" type="rviz" name="rviz" required="true"
            args="-d /home/chris/ros_ws/gazebo_gymnasium/launch/multiturtle.rviz"/>

</launch>
